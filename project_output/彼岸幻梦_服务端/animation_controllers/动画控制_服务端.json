{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.server.during_leisure_time": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"trigger_standby_mode": "q.ground_speed == 0 && !q.is_in_water && !q.has_target && !q.is_on_fire && !q.is_in_lava && !q.is_invisible && q.state_time >= q.property('property:voice_interval')"
						}
					]
				},
				"trigger_standby_mode": {
					"transitions": [
						{
							"no_sitting": "!q.is_riding && !q.is_sitting"
						},
						{
							"is_sitting": "q.is_riding || q.is_sitting"
						},
						{
							"default": "q.ground_speed >= 0.5"
						}
					]
				},
				"no_sitting": {
					"on_entry": [
						"/opal:execute_idle_action @s no_sitting"
					],
					"transitions": [
						{
							"default": "!q.has_target || q.ground_speed >= 0.5"
						}
					]
				},
				"is_sitting": {
					"on_entry": [
						"/opal:execute_idle_action @s is_sitting"
					],
					"transitions": [
						{
							"default": "!q.has_target || q.ground_speed >= 0.5"
						}
					]
				}
			}
		},
		"controller.animation.server.apply_dynamic_flight_to_entity": {
			"initial_state": "static",
			"states": {
				"static": {
					"transitions": [
						{
							"flying_timer": "q.has_player_rider && q.is_tamed && (q.vertical_speed > -0.35 || q.vertical_speed < 0.35) && !q.is_on_ground && !q.is_in_lava && !q.is_in_water"
						}
					]
				},
				"flying_timer": {
					"animations": [
						"timer_0"
					],
					"on_entry": [
						"/opal:binding_dynamic_flight @s"
					],
					"transitions": [
						{
							"onan_flying": "q.has_player_rider && !q.is_on_ground && !q.is_in_lava && !q.is_in_water && q.all_animations_finished"
						},
						{
							"static": "(!q.has_player_rider || q.is_on_ground || q.is_in_lava || q.is_in_water) && q.all_animations_finished"
						}
					]
				},
				"static_timer": {
					"animations": [
						"timer_1"
					],
					"on_entry": [
						"/opal:separate_dynamic_flight @s"
					],
					"transitions": [
						{
							"static": "q.all_animations_finished"
						}
					]
				},
				"onan_flying": {
					"on_entry": [
						"/opal:apply_dynamic_flight @s 2",
						"/camera @p set minecraft:follow_orbit"
					],
					"transitions": [
						{
							"flying": "q.has_player_rider && !q.is_on_ground && !q.is_in_lava && !q.is_in_water && q.all_animations_finished"
						}
					]
				},
				"flying": {
					"on_entry": [
						"/opal:apply_dynamic_flight @s 2"
					],
					"transitions": [
						{
							"static_timer": "!q.has_player_rider || q.is_on_ground || q.is_in_lava || q.is_in_water"
						},
						{
							"return": "!q.is_on_ground && !q.is_in_lava && !q.is_in_water"
						}
					]
				},
				"return": {
					"on_entry": [
						"/opal:apply_dynamic_flight @s 2"
					],
					"transitions": [
						{
							"static_timer": "!q.has_player_rider || q.is_on_ground || q.is_in_lava || q.is_in_water"
						},
						{
							"flying": "!q.is_on_ground && !q.is_in_lava && !q.is_in_water"
						}
					]
				}
			}
		},
		"controller.animation.server.emergency_avoidance": {
			"initial_state": "healthy",
			"states": {
				"healthy": {
					"on_entry": [
						"/event entity @s entity_event:return_foundation"
					],
					"transitions": [
						{
							"endangered": "q.health <= 35 && q.health >= 1"
						}
					]
				},
				"endangered": {
					"on_entry": [
						"/event entity @s entity_event:urgent_shelter"
					],
					"transitions": [
						{
							"healthy": "q.health >= 75"
						}
					]
				}
			}
		},
		"controller.animation.server.train_parts_destroy": {
			"initial_state": "list",
			"states": {
				"list": {
					"transitions": [
						{
							"buffer": "q.is_riding"
						}
					]
				},
				"buffer": {
					"transitions": [
						{
							"destroy": "!q.is_riding"
						}
					]
				},
				"destroy": {
					"on_entry": [
						"/opal:unload_inventory_destroy"
					]
				}
			}
		},
		"controller.animation.server.is_player_riding_on_you": {
			"initial_state": "waiting_for_destruction",
			"states": {
				"waiting_for_destruction": {
					"transitions": [
						{
							"buffer": "q.has_player_rider"
						},
						{
							"destroy": "q.state_time >= 5"
						}
					]
				},
				"buffer": {
					"transitions": [
						{
							"destroy": "!q.has_player_rider"
						}
					]
				},
				"destroy": {
					"on_entry": [
						"/opal:unload_inventory_destroy"
					]
				}
			}
		},
		"controller.animation.server.triggering_death_behavior": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"death": "q.health <= 1 && !q.property('property:already_death')"
						}
					]
				},
				"death": {
					"on_entry": [
						"@s entity_event:death_behavior"
					]
				}
			}
		},
		"controller.animation.server.tyrannosaurus_rex_move": {
			"states": {
				"default": {
					"transitions": [
						{
							"move": "q.is_alive && q.modified_move_speed >= 0.3"
						},
						{
							"attack_hit": "q.is_delayed_attacking && q.modified_move_speed <= 0.3"
						}
					]
				},
				"move": {
					"animations": [
						"on_move"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished && (!q.is_alive || q.modified_move_speed <= 0.3)"
						}
					]
				},
				"attack_hit": {
					"on_entry": [
						"/effect @s instant_health 1 5 true"
					],
					"transitions": [
						{
							"move": "q.is_alive && q.modified_move_speed >= 0.3"
						}
					]
				}
			}
		},
		"controller.animation.server.apply_traction_to_target": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"apply_traction": "q.state_time >= 3.0"
						}
					]
				},
				"apply_traction": {
					"on_entry": [
						"@s entity_event:apply_traction_to_target"
					],
					"transitions": [
						{
							"default": "q.state_time >= 3.0"
						}
					]
				}
			}
		}
	}
}