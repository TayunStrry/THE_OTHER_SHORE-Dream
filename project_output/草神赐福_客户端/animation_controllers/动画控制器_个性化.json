{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.player_to_individuation.attack_with_items": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"first_person_attack": "v.attack_time && v.is_first_person && q.state_time >= 0.15"
						},
						{
							"sneak_attack": "v.attack_time && q.is_sneaking && !q.is_moving && q.state_time >= 0.15 && !q.is_in_water"
						},
						{
							"fast_move_attack": "v.attack_time && q.is_sprinting && q.state_time >= 0.15 && !q.is_in_water"
						},
						{
							"sneak_move_attack": "v.attack_time && q.is_sneaking && q.is_moving && q.state_time >= 0.15 && !q.is_in_water"
						},
						{
							"basic_attack": "v.attack_time && q.state_time >= 0.15 && ((q.is_on_ground && !q.is_sneaking && !q.is_sprinting) || q.is_in_water || !q.is_on_ground)"
						}
					]
				},
				"first_person_attack": {
					"animations": [
						"first_person_attack"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished || (v.attack_time && q.state_time >= 0.15)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"basic_attack": {
					"animations": [
						"basic_attack"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished || (v.attack_time && q.state_time >= 0.15)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"fast_move_attack": {
					"animations": [
						"fast_move_attack"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished || (v.attack_time && q.state_time >= 0.15)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"sneak_attack": {
					"animations": [
						"sneak_attack"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished || (v.attack_time && q.state_time >= 0.15)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"sneak_move_attack": {
					"animations": [
						"sneak_move_attack"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished || (v.attack_time && q.state_time >= 0.15)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.items_and_aiming": {
			"states": {
				"default": {
					"animations": [
						{
							"controller.attack_with_items": "!v.rechargeable_item"
						},
						{
							"controller.action_in_water": "q.is_in_water && !q.is_riding"
						},
						{
							"controller.action_in_air": "!q.is_in_water && !q.is_riding"
						},
						{
							"look_target": "!v.rechargeable_item && !q.is_sleeping && !v.is_swiming"
						},
						{
							"ride": "!v.is_crossbow && q.is_riding"
						}
					],
					"transitions": [
						{
							"use_crossbow": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:crossbow')"
						},
						{
							"use_bow": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'starry_map:magic_crystal_bow', 'minecraft:bow')"
						},
						{
							"use_spyglass": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:spyglass')"
						},
						{
							"use_trident": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:trident')"
						},
						{
							"use_brush": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:brush')"
						},
						{
							"use_potion": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:potion') && q.state_time >= 0.5"
						},
						{
							"use_food": "v.item_use && q.state_time >= 0.5"
						},
						{
							"charged_crossbow": "v.is_crossbow && !v.item_use"
						}
					],
					"on_exit": [
						"v.standby_animation = 0;",
						"v.after_charging = 1;"
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"charged_crossbow": {
					"animations": [
						"charged_crossbow"
					],
					"transitions": [
						{
							"default": "!q.item_is_charged"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_crossbow": {
					"animations": [
						"use_crossbow"
					],
					"transitions": [
						{
							"charged_crossbow": "q.item_is_charged && q.state_time >= 1.0"
						},
						{
							"default": "(!v.item_use && q.state_time >= 1.5) || (!q.item_is_charged && q.state_time >= 1.5)"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_spyglass": {
					"animations": [
						"use_spyglass"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_trident": {
					"animations": [
						"use_trident"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_brush": {
					"animations": [
						"use_brush"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_bow": {
					"animations": [
						"use_bow"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_food": {
					"animations": [
						"use_food"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				},
				"use_potion": {
					"animations": [
						"use_potion"
					],
					"transitions": [
						{
							"default": "!v.item_use && q.state_time >= 1.0"
						}
					],
					"blend_transition": 0.35,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.special_effects": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"display_crosshair": "v.rechargeable_item"
						}
					]
				},
				"display_crosshair": {
					"animations": [
						"display_crosshair"
					],
					"transitions": [
						{
							"default": "!q.item_is_charged && q.main_hand_item_use_duration == 0.0"
						}
					]
				}
			}
		},
		"controller.animation.player_to_individuation.fall_into_water": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"splash": "!q.is_on_ground && q.is_in_water"
						}
					]
				},
				"splash": {
					"particle_effects": [
						{
							"effect": "splash"
						},
						{
							"effect": "impact"
						},
						{
							"effect": "ripples"
						}
					],
					"transitions": [
						{
							"default": "!q.is_in_water"
						}
					]
				}
			}
		},
		"controller.animation.player_to_individuation.action_in_water": {
			"initial_state": "default",
			"states": {
				"default": {
					"animations": [
						"initialization"
					],
					"transitions": [
						{
							"swim": "v.is_swiming && q.state_time >= 0.5"
						},
						{
							"float_swim": "(!q.is_on_ground || q.is_moving) && q.state_time >= 0.5"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"float_swim": {
					"animations": [
						"float_swim"
					],
					"transitions": [
						{
							"swim": "v.is_swiming && q.state_time >= 0.5"
						},
						{
							"default": "q.is_on_ground && q.state_time >= 0.5"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"swim": {
					"animations": [
						"swim"
					],
					"transitions": [
						{
							"float_swim": "!v.is_swiming && !q.is_on_ground && q.state_time >= 0.5"
						},
						{
							"default": "!v.is_swiming && q.is_on_ground && q.state_time >= 0.5"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.standby_animation": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"standby_animation_0": "v.standby_animation == 1 && q.state_time >= 0.5"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"standby_animation_0": {
					"animations": [
						"standby_animation_0"
					],
					"transitions": [
						{
							"default": "v.standby_animation == 0 && q.state_time >= 0.5"
						},
						{
							"initialization": "q.state_time >= 8.3 && v.standby_animation != 0"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"initialization": {
					"animations": [
						"initialization"
					],
					"on_entry": [
						"v.standby_animation = 6;"
					],
					"transitions": [
						{
							"default": "v.standby_animation == 0 && q.state_time >= 0.5"
						},
						{
							"standby_animation_1": "q.state_time >= 15.0 && v.standby_animation != 0"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"standby_animation_1": {
					"animations": [
						"standby_animation_1"
					],
					"on_exit": [
						"v.standby_animation = 0;"
					],
					"transitions": [
						{
							"default": "v.standby_animation < 4 && q.state_time >= 0.5"
						}
					],
					"blend_transition": 1,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.action_in_air": {
			"states": {
				"default": {
					"animations": [
						"initialization",
						"controller.blink"
					],
					"transitions": [
						{
							"fast_move": "!q.is_sneaking && q.is_moving && !v.is_swiming && q.is_sprinting && !q.is_sleeping && q.state_time >= 0.2"
						},
						{
							"move": "!q.is_sneaking && q.is_moving && !v.is_swiming && !q.is_sprinting && !q.is_sleeping && q.state_time >= 0.2"
						},
						{
							"sneak_move": "q.is_sneaking && q.is_moving && !v.is_swiming && !q.is_sprinting && !q.is_sleeping"
						},
						{
							"sneak": "q.is_sneaking && !q.is_moving && !v.is_swiming && !q.is_sprinting && !q.is_sleeping"
						},
						{
							"static_creep": "!q.is_sneaking && !q.is_moving && v.is_swiming && !q.is_sprinting && !q.is_sleeping"
						},
						{
							"creep": "!q.is_sneaking && q.is_moving && v.is_swiming && !q.is_sprinting && !q.is_sleeping"
						},
						{
							"jump": "(!q.is_on_ground || q.is_jumping) && q.state_time >= 0.5"
						},
						{
							"sleep": "q.is_sleeping"
						},
						{
							"standby_animation": "(!v.no_standby_mode && q.state_time >= 15.0) || v.standby_animation >= 1"
						}
					],
					"on_entry": [
						"v.after_charging = 0;"
					],
					"blend_transition": 0.45,
					"blend_via_shortest_path": true
				},
				"standby_animation": {
					"animations": [
						"controller.standby_animation"
					],
					"transitions": [
						{
							"default": "v.no_standby_mode || v.standby_animation == 0 || v.after_charging == 1"
						}
					],
					"on_entry": [
						"v.standby_animation = 1;"
					],
					"on_exit": [
						"v.standby_animation = 0;"
					],
					"blend_transition": 0.75,
					"blend_via_shortest_path": true
				},
				"move": {
					"animations": [
						"move"
					],
					"transitions": [
						{
							"fast_move": "(q.is_sleeping || q.is_sneaking || v.is_swiming || q.is_sprinting)"
						},
						{
							"default": "(q.is_sleeping || q.is_sneaking || v.is_swiming || !q.is_moving) && q.state_time >= 0.2"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"fast_move": {
					"animations": [
						"fast_move"
					],
					"transitions": [
						{
							"super_move": "!q.is_sneaking && q.is_moving && !v.is_swiming && q.is_sprinting && !q.is_sleeping && q.state_time >= 3"
						},
						{
							"default": "(q.is_sleeping || q.is_sneaking || v.is_swiming || !q.is_moving) && q.state_time >= 0.2"
						},
						{
							"move": "(q.is_sleeping || q.is_sneaking || v.is_swiming || !q.is_sprinting) && q.state_time >= 0.2"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"super_move": {
					"animations": [
						"super_move"
					],
					"transitions": [
						{
							"default": "(q.is_sleeping || q.is_sneaking || v.is_swiming || !q.is_moving) && q.state_time >= 0.2"
						},
						{
							"move": "(q.is_sleeping || q.is_sneaking || v.is_swiming || !q.is_sprinting) && q.state_time >= 0.2"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"sneak": {
					"animations": [
						"sneak"
					],
					"transitions": [
						{
							"sneak_move": "q.is_sneaking && q.is_moving && !v.is_swiming && !q.is_sprinting"
						},
						{
							"default": "!q.is_sneaking || q.is_sleeping || v.is_swiming"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"sneak_move": {
					"animations": [
						"sneak_move"
					],
					"transitions": [
						{
							"sneak": "q.is_sneaking && !q.is_moving && !v.is_swiming && !q.is_sprinting"
						},
						{
							"default": "!q.is_sneaking || q.is_sleeping || v.is_swiming"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"creep": {
					"animations": [
						"creep"
					],
					"transitions": [
						{
							"static_creep": "!q.is_sneaking && !q.is_moving && v.is_swiming && !q.is_sprinting"
						},
						{
							"default": "!v.is_swiming || q.is_sleeping || q.is_sneaking"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"static_creep": {
					"animations": [
						"static_creep"
					],
					"transitions": [
						{
							"creep": "!q.is_sneaking && q.is_moving && v.is_swiming && !q.is_sprinting"
						},
						{
							"default": "!v.is_swiming || q.is_sleeping || q.is_sneaking"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"jump": {
					"animations": [
						"controller.flying_and_jumping"
					],
					"transitions": [
						{
							"default": "q.is_on_ground && !q.is_jumping"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				},
				"sleep": {
					"animations": [
						"sleep"
					],
					"transitions": [
						{
							"default": "!q.is_sleeping"
						}
					],
					"blend_transition": 0.5,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.first_person_body": {
			"initial_state": "default",
			"states": {
				"default": {
					"animations": [
						"first_person_static"
					],
					"transitions": [
						{
							"moving": "q.is_moving && q.state_time >= 0.2"
						},
						{
							"sneak": "q.is_sneaking"
						}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"moving": {
					"animations": [
						"first_person_moving"
					],
					"transitions": [
						{
							"default": "!q.is_moving && q.state_time >= 0.2"
						}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"sneak": {
					"animations": [
						"first_person_sneak"
					],
					"transitions": [
						{
							"default": "!q.is_sneaking && q.state_time >= 0.2"
						}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				}
			}
		},
		"controller.animation.player_to_individuation.first_person": {
			"states": {
				"default": {
					"animations": [
						"first_person_default"
					],
					"transitions": [
						{
							"first_person_trident": "v.item_use && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:trident') && q.state_time >= 0.25"
						},
						{
							"first_person_apply": "v.item_use && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:trident') && q.state_time >= 0.25"
						},
						{
							"first_person_shield": "q.is_item_name_any('slot.weapon.mainhand', 'minecraft:shield') && q.state_time >= 0.25"
						},
						{
							"first_person_spyglass": "q.is_item_name_any('slot.weapon.mainhand', 'minecraft:spyglass') && q.state_time >= 0.25"
						},
						{
							"first_person_slingshot": "q.is_item_name_any('slot.weapon.mainhand', 'starry_map:magic_crystal_bow') && q.state_time >= 0.25"
						},
						{
							"first_person_hammer": "q.is_item_name_any('slot.weapon.mainhand', 'starry_map:magic_crystal_hammer') && q.state_time >= 0.25"
						},
						{
							"first_person_bow": "q.is_item_name_any('slot.weapon.mainhand', 'minecraft:bow') && q.state_time >= 0.25"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_apply": {
					"animations": [
						"first_person_apply"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished && !v.item_use"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_trident": {
					"animations": [
						"first_person_trident"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished && !v.item_use"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_shield": {
					"animations": [
						"first_person_shield"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:shield')"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_spyglass": {
					"animations": [
						"first_person_spyglass"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:spyglass')"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_slingshot": {
					"animations": [
						"first_person_slingshot"
					],
					"transitions": [
						{
							"default": "(q.all_animations_finished && !q.is_item_name_any('slot.weapon.mainhand', 'starry_map:magic_crystal_bow')) || v.item_use"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_hammer": {
					"animations": [
						"first_person_hammer"
					],
					"transitions": [
						{
							"default": "(q.all_animations_finished && !q.is_item_name_any('slot.weapon.mainhand', 'starry_map:magic_crystal_hammer')) || v.item_use"
						}
					],
					"blend_transition": 0.25,
					"blend_via_shortest_path": true
				},
				"first_person_bow": {
					"animations": [
						"first_person_bow"
					],
					"transitions": [
						{
							"default": "(q.all_animations_finished && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:bow')) || v.item_use"
						}
					],
					"blend_transition": 0.25
				}
			}
		},
		"controller.animation.player_to_individuation.switch_item": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"change": "q.get_equipped_item_name != v.current_item_name"
						}
					],
					"blend_transition": 0.15
				},
				"change": {
					"animations": [
						"change_item"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished"
						}
					],
					"on_entry": [
						"v.current_item_name = q.get_equipped_item_name;",
						"v.standby_animation = 0;",
						"v.after_charging = 1;"
					],
					"blend_transition": 0.15
				}
			}
		},
		"controller.animation.player_to_individuation.blink": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"blink": "!q.is_sitting && q.state_time >= 5"
						}
					]
				},
				"blink": {
					"animations": [
						"blink"
					],
					"transitions": [
						{
							"default": "q.all_animations_finished"
						}
					]
				}
			}
		},
		"controller.animation.player_to_individuation.flying_and_jumping": {
			"initial_state": "jump",
			"states": {
				"jump": {
					"animations": [
						"jump"
					],
					"transitions": [
						{
							"flight": "!q.is_gliding && q.is_moving && q.state_time >= 0.5"
						}
					],
					"blend_transition": 1,
					"blend_via_shortest_path": true
				},
				"flight": {
					"animations": [
						"flight"
					],
					"transitions": [
						{
							"jump": "(q.is_gliding || !q.is_moving) && q.state_time >= 0.5"
						}
					],
					"blend_transition": 1,
					"blend_via_shortest_path": true
				}
			}
		}
	}
}