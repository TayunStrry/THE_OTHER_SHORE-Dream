{
	"format_version": "1.8.0",
	"animations": {
		"animation.item.blueprint.obtain_block": {
			"loop": true,
			"bones": {
				"item": {
					"rotation": [
						"c.is_first_person == 1 ? 28 : 0",
						"c.is_first_person == 1 ? 57 : 0",
						"c.is_first_person == 1 ? -20 : 0"
					],
					"position": [
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 5 : 0"
					]
				},
				"block": {
					"rotation": [
						"q.life_time * 50",
						0,
						0
					]
				},
				"icon_pen": {
					"rotation": [
						0,
						"math.cos(q.life_time * 350) * 3.0",
						0
					],
					"position": [
						0,
						0,
						"math.cos(q.life_time * 075) * 0.5"
					]
				}
			}
		},
		"animation.item.blueprint.alter_block": {
			"loop": true,
			"bones": {
				"item": {
					"rotation": [
						"c.is_first_person == 1 ? 28 : 0",
						"c.is_first_person == 1 ? 57 : 0",
						"c.is_first_person == 1 ? -20 : 0"
					],
					"position": [
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 5 : 0"
					]
				},
				"block": {
					"rotation": [
						0,
						0,
						"q.life_time * 50"
					]
				},
				"icon_pen": {
					"rotation": [
						0,
						"q.life_time * 125",
						0
					],
					"position": [
						0,
						0,
						"math.cos(q.life_time * 075) * 0.75"
					]
				}
			}
		},
		"animation.item.blueprint.fill_region": {
			"loop": true,
			"bones": {
				"item": {
					"rotation": [
						"c.is_first_person == 1 ? 28 : 0",
						"c.is_first_person == 1 ? 57 : 0",
						"c.is_first_person == 1 ? -20 : 0"
					],
					"position": [
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 0 : 0",
						"c.is_first_person == 1 ? 5 : 0"
					]
				},
				"block": {
					"rotation": [
						"q.life_time * 50",
						0,
						"q.life_time * 50"
					]
				},
				"icon_pen": {
					"rotation": [
						0,
						"math.cos(q.life_time * 75) * 4.5",
						0
					],
					"position": [
						"0.5 + (math.cos(q.life_time * 75) * 0.5)",
						0,
						"math.cos(q.life_time * 75) * 0.5"
					]
				},
				"icon_ruler": {
					"position": [
						"math.cos(q.life_time * 75) * 0.5",
						0,
						"math.cos(q.life_time * 45) * 0.3"
					]
				}
			}
		}
	}
}